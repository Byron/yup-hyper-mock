initSidebarItems({"mod":[["any","This module implements the `Any` trait, which enables dynamic typing of any `'static` type through runtime reflection."],["ascii","Operations on ASCII strings and characters"],["borrow","A module for working with borrowed data."],["boxed","A pointer type for heap allocation."],["cell","Shareable mutable containers."],["char","A character type."],["clone","The `Clone` trait for types that cannot be 'implicitly copied'"],["cmp","Functionality for ordering and comparison."],["collections","Collection types."],["convert","Traits for conversions between types."],["default","The `Default` trait for types which may have meaningful default values."],["dynamic_lib","Dynamic library facilities."],["env","Inspection and manipulation of the process's environment."],["error","Traits for working with Errors."],["f32","The 32-bit floating point type."],["f64","The 64-bit floating point type."],["ffi","Utilities related to FFI bindings."],["fmt","Utilities for formatting and printing strings"],["fs","Filesystem manipulation operations"],["hash","Generic hashing support."],["i16","The 16-bit signed integer type."],["i32","The 32-bit signed integer type."],["i64","The 64-bit signed integer type."],["i8","The 8-bit signed integer type."],["intrinsics","rustc compiler intrinsics."],["io","Traits, helpers, and type definitions for core I/O functionality."],["isize","The pointer-sized signed integer type."],["iter","Composable external iteration"],["marker","Primitive traits and marker types representing basic 'kinds' of types."],["mem","Basic functions for dealing with memory"],["net","Networking primitives for TCP/UDP communication."],["num","Additional functionality for numerics."],["ops","Overloadable operators"],["option","Optional values"],["os","OS-specific functionality"],["panic","Panic support in the standard library"],["path","Cross-platform path manipulation."],["prelude","The Rust Prelude"],["process","Working with processes."],["ptr","Raw, unsafe pointers, `*const T`, and `*mut T`"],["raw","Contains struct definitions for the layout of compiler built-in types."],["rc","Thread-local reference-counted boxes (the `Rc<T>` type)."],["result","Error handling with the `Result` type"],["slice","A dynamically-sized view into a contiguous sequence, `[T]`."],["str","Unicode string slices"],["string","A UTF-8 encoded, growable string."],["sync","Useful synchronization primitives"],["thread","Native threads"],["time","Temporal quantification."],["u16","The 16-bit unsigned integer type."],["u32","The 32-bit unsigned integer type."],["u64","The 64-bit unsigned integer type."],["u8","The 8-bit unsigned integer type."],["usize","The pointer-sized unsigned integer type."],["vec","A contiguous growable array type with heap-allocated contents, written `Vec<T>` but pronounced 'vector.'"]]});