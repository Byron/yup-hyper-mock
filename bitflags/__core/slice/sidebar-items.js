initSidebarItems({"fn":[["from_raw_parts","Forms a slice from a pointer and a length."],["from_raw_parts_mut","Performs the same functionality as `from_raw_parts`, except that a mutable slice is returned."]],"mod":[["bytes","Operations on `[u8]`."]],"struct":[["Chunks","An iterator over a slice in (non-overlapping) chunks (`size` elements at a time)."],["ChunksMut","An iterator over a slice in (non-overlapping) mutable chunks (`size` elements at a time). When the slice len is not evenly divided by the chunk size, the last slice of the iteration will be the remainder."],["Iter","Immutable slice iterator"],["IterMut","Mutable slice iterator."],["RSplitN","An iterator over subslices separated by elements that match a predicate function, limited to a given number of splits, starting from the end of the slice."],["RSplitNMut","An iterator over subslices separated by elements that match a predicate function, limited to a given number of splits, starting from the end of the slice."],["Split","An iterator over subslices separated by elements that match a predicate function."],["SplitMut","An iterator over the subslices of the vector which are separated by elements that match `pred`."],["SplitN","An iterator over subslices separated by elements that match a predicate function, limited to a given number of splits."],["SplitNMut","An iterator over subslices separated by elements that match a predicate function, limited to a given number of splits."],["Windows","An iterator over overlapping subslices of length `size`."]],"trait":[["SliceConcatExt","An extension trait for concatenating slices"]]});