initSidebarItems({"constant":[["HEAP","A value that represents the heap. This is the default place that the `box` keyword allocates into when no place is supplied."]],"struct":[["Box","A pointer type for heap allocation."],["ExchangeHeapSingleton","This the singleton type used solely for `boxed::HEAP`."],["IntermediateBox","`IntermediateBox` represents uninitialized backing storage for `Box`."]],"trait":[["FnBox","`FnBox` is a version of the `FnOnce` intended for use with boxed closure objects. The idea is that where one would normally store a `Box<FnOnce()>` in a data structure, you should use `Box<FnBox()>`. The two traits behave essentially the same, except that a `FnBox` closure can only be called if it is boxed. (Note that `FnBox` may be deprecated in the future if `Box<FnOnce()>` closures become directly usable.)"]]});